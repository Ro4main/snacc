diff -uraN snacc-1.3bbn.orig/c++-lib/inc/asn-any.h snacc-1.3bbn/c++-lib/inc/asn-any.h
--- snacc-1.3bbn.orig/c++-lib/inc/asn-any.h	2001-01-27 01:03:02.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/asn-any.h	2005-07-30 19:22:42.514097072 +0000
@@ -81,7 +81,7 @@
 
   PDU_MEMBER_MACROS
 
-  void				Print (ostream &) const;
+  void				Print (std::ostream &) const;
 
 #if 0
 #if TCL
diff -uraN snacc-1.3bbn.orig/c++-lib/inc/asn-bits.h snacc-1.3bbn/c++-lib/inc/asn-bits.h
--- snacc-1.3bbn.orig/c++-lib/inc/asn-bits.h	2001-01-27 01:03:02.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/asn-bits.h	2005-07-30 19:23:29.321981192 +0000
@@ -105,7 +105,7 @@
 
   PDU_MEMBER_MACROS
 
-  void				Print (ostream &) const;
+  void				Print (std::ostream &) const;
 
 #if META
   static const AsnBitsTypeDesc	_desc;
diff -uraN snacc-1.3bbn.orig/c++-lib/inc/asn-bool.h snacc-1.3bbn/c++-lib/inc/asn-bool.h
--- snacc-1.3bbn.orig/c++-lib/inc/asn-bool.h	2001-01-27 01:03:02.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/asn-bool.h	2005-07-30 19:23:45.319549192 +0000
@@ -101,7 +101,7 @@
 
   PDU_MEMBER_MACROS
 
-  void				Print (ostream &) const;
+  void				Print (std::ostream &) const;
 
 #if META
   static const AsnBoolTypeDesc	_desc;
diff -uraN snacc-1.3bbn.orig/c++-lib/inc/asn-config.h snacc-1.3bbn/c++-lib/inc/asn-config.h
--- snacc-1.3bbn.orig/c++-lib/inc/asn-config.h	2001-01-27 01:03:02.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/asn-config.h	2005-07-30 19:24:29.054900408 +0000
@@ -49,7 +49,7 @@
 #define _asn_config_h_
 
 #include <ctype.h>  /* for isprint() in <<op on AsnOcts */
-#include <iostream.h>
+#include <iostream>
 #include <memory.h>
 #include <string.h>
 #include <setjmp.h>
@@ -85,14 +85,14 @@
  * Asn1Error (char *str)
  *  - configure error handler
  */
-#define Asn1Error		cerr
+#define Asn1Error		std::cerr
 
 
 /*
  * Asn1Warning (char *str)  - configure warning mechanism
  * (currently not called)
  */
-#define Asn1Warning		cerr
+#define Asn1Warning		std::cerr
 
 
 /*
diff -uraN snacc-1.3bbn.orig/c++-lib/inc/asn-int.h snacc-1.3bbn/c++-lib/inc/asn-int.h
--- snacc-1.3bbn.orig/c++-lib/inc/asn-int.h	2001-01-27 01:03:02.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/asn-int.h	2005-07-30 19:24:45.421412320 +0000
@@ -70,7 +70,7 @@
 
   PDU_MEMBER_MACROS
 
-  void				Print (ostream &os) const;
+  void				Print (std::ostream &os) const;
 
 #if META
   static const AsnIntTypeDesc	_desc;
diff -uraN snacc-1.3bbn.orig/c++-lib/inc/asn-list.h snacc-1.3bbn/c++-lib/inc/asn-list.h
--- snacc-1.3bbn.orig/c++-lib/inc/asn-list.h	2001-01-27 01:03:02.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/asn-list.h	2005-07-30 19:25:10.914682616 +0000
@@ -86,7 +86,7 @@
 				  last (NULL)
 				{}
 
-  friend ostream		&operator << (ostream &os, AsnList &l);
+  friend std::ostream		&operator << (std::ostream &os, AsnList &l);
 
   void				SetCurrElmt (unsigned long int index);
   void				SetCurrToFirst()			{ curr = first; }
diff -uraN snacc-1.3bbn.orig/c++-lib/inc/asn-null.h snacc-1.3bbn/c++-lib/inc/asn-null.h
--- snacc-1.3bbn.orig/c++-lib/inc/asn-null.h	2001-01-27 01:03:02.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/asn-null.h	2005-07-30 19:25:26.432323576 +0000
@@ -57,7 +57,7 @@
 
   PDU_MEMBER_MACROS
 
-  void				Print (ostream &os) const;
+  void				Print (std::ostream &os) const;
 
 #if META
   static const AsnNullTypeDesc	_desc;
diff -uraN snacc-1.3bbn.orig/c++-lib/inc/asn-octs.h snacc-1.3bbn/c++-lib/inc/asn-octs.h
--- snacc-1.3bbn.orig/c++-lib/inc/asn-octs.h	2001-01-27 01:03:02.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/asn-octs.h	2005-07-30 19:25:41.916969552 +0000
@@ -108,7 +108,7 @@
 
   PDU_MEMBER_MACROS
 
-  void				Print (ostream &os) const;
+  void				Print (std::ostream &os) const;
 
 #if META
   static const AsnOctsTypeDesc	_desc;
diff -uraN snacc-1.3bbn.orig/c++-lib/inc/asn-oid.h snacc-1.3bbn/c++-lib/inc/asn-oid.h
--- snacc-1.3bbn.orig/c++-lib/inc/asn-oid.h	2001-01-27 01:03:03.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/asn-oid.h	2005-07-30 19:25:52.747323088 +0000
@@ -108,7 +108,7 @@
 
   PDU_MEMBER_MACROS
 
-  void				Print (ostream &os) const;
+  void				Print (std::ostream &os) const;
 
 #if META
   static const AsnOidTypeDesc	_desc;
diff -uraN snacc-1.3bbn.orig/c++-lib/inc/asn-real.h snacc-1.3bbn/c++-lib/inc/asn-real.h
--- snacc-1.3bbn.orig/c++-lib/inc/asn-real.h	2001-01-27 01:03:03.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/asn-real.h	2005-07-30 19:26:05.321411536 +0000
@@ -67,7 +67,7 @@
   AsnLen			BEnc (BUF_TYPE b);
   void				BDec (BUF_TYPE b, AsnLen &bytesDecoded, ENV_TYPE env);
 
-  void				Print (ostream &os) const;
+  void				Print (std::ostream &os) const;
 
   PDU_MEMBER_MACROS
 
diff -uraN snacc-1.3bbn.orig/c++-lib/inc/asn-type.h snacc-1.3bbn/c++-lib/inc/asn-type.h
--- snacc-1.3bbn.orig/c++-lib/inc/asn-type.h	2001-01-27 01:03:03.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/asn-type.h	2005-07-30 19:26:16.551704272 +0000
@@ -111,7 +111,7 @@
 
 #endif
 
-  virtual void			Print (ostream &) const;
+  virtual void			Print (std::ostream &) const;
 
 #if META
   static const AsnTypeDesc	_desc;
diff -uraN snacc-1.3bbn.orig/c++-lib/inc/print.h snacc-1.3bbn/c++-lib/inc/print.h
--- snacc-1.3bbn.orig/c++-lib/inc/print.h	2001-01-27 01:03:03.000000000 +0000
+++ snacc-1.3bbn/c++-lib/inc/print.h	2005-07-30 19:26:54.240974632 +0000
@@ -42,8 +42,8 @@
 extern unsigned short int	indentG;
 extern unsigned short int	stdIndentG;
 
-void				Indent (ostream &os, unsigned short int i);
+void				Indent (std::ostream &os, unsigned short int i);
 
-ostream				&operator << (ostream &os, const AsnType &a);
+std::ostream			&operator << (std::ostream &os, const AsnType &a);
 
 #endif /* conditional include */
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-any.C snacc-1.3bbn/c++-lib/src/asn-any.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-any.C	2001-01-27 01:03:00.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-any.C	2005-07-30 19:27:15.597727912 +0000
@@ -165,7 +165,7 @@
 }
 
 
-void AsnAny::Print (ostream &os) const
+void AsnAny::Print (std::ostream &os) const
 {
   os << value;
 }
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-bits.C snacc-1.3bbn/c++-lib/src/asn-bits.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-bits.C	2001-01-27 01:03:00.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-bits.C	2005-07-30 19:27:51.063336320 +0000
@@ -65,6 +65,8 @@
 #include "asn-bits.h"
 #include "str-stk.h"
 
+using std::endl;
+
 extern StrStk strStkG;
 unsigned short int  strStkUnusedBitsG;
 
@@ -440,7 +442,7 @@
 }  /* BDecConsBits */
 
 // prints the BIT STRING to the given ostream.
-void AsnBits::Print (ostream &os) const
+void AsnBits::Print (std::ostream &os) const
 {
     size_t octetLen = (bitLen+7)/8;
 
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-bool.C snacc-1.3bbn/c++-lib/src/asn-bool.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-bool.C	2001-01-27 01:03:00.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-bool.C	2005-07-30 19:28:23.793360600 +0000
@@ -54,6 +54,8 @@
 #include "asn-type.h"
 #include "asn-bool.h"
 
+using std::endl;
+
 AsnType *AsnBool::Clone() const
 {
   return new AsnBool;
@@ -110,7 +112,7 @@
 }
 
 // print the BOOLEAN's value in ASN.1 value notation to the given ostream
-void AsnBool::Print (ostream &os) const
+void AsnBool::Print (std::ostream &os) const
 {
   os << (value ? "TRUE" : "FALSE");
 }
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-enum.C snacc-1.3bbn/c++-lib/src/asn-enum.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-enum.C	2001-01-27 01:03:00.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-enum.C	2005-07-30 19:28:57.068302040 +0000
@@ -41,9 +41,11 @@
 #include "asn-int.h"
 #include "asn-enum.h"
 
+using std::endl;
+
 AsnType *AsnEnum::Clone() const
 {
-  cerr << "AsnEnum::Clone() called" << endl;
+  std::cerr << "AsnEnum::Clone() called" << endl;
   abort();
   return NULL;
 }
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-int.C snacc-1.3bbn/c++-lib/src/asn-int.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-int.C	2001-01-27 01:03:00.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-int.C	2005-07-30 19:31:10.276100376 +0000
@@ -55,6 +55,8 @@
 #include "asn-type.h"
 #include "asn-int.h"
 
+using std::endl;
+
 AsnType *AsnInt::Clone() const
 {
   return new AsnInt;
@@ -171,7 +173,7 @@
     BDecContent (b, MAKE_TAG_ID (UNIV, PRIM, INTEGER_TAG_CODE), elmtLen, bytesDecoded, env);
 }
 
-void AsnInt::Print (ostream &os) const
+void AsnInt::Print (std::ostream &os) const
 {
     os << value;
 }
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-len.C snacc-1.3bbn/c++-lib/src/asn-len.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-len.C	2001-01-27 01:03:00.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-len.C	2005-07-30 19:31:35.984192152 +0000
@@ -41,6 +41,7 @@
 #include "asn-config.h"
 #include "asn-len.h"
 
+using std::endl;
 
 /*
  * Encodes the given length to the given buffer.
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-list.C snacc-1.3bbn/c++-lib/src/asn-list.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-list.C	2001-01-27 01:03:00.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-list.C	2005-07-30 19:32:25.815616624 +0000
@@ -62,6 +62,8 @@
 #include "asn-tag.h"
 #include "asn-type.h"
 
+using std::endl;
+
 #ifdef __GNUG__
 #pragma implementation
 #endif
@@ -80,7 +82,7 @@
 
 // print routine for lists
 template <class T>
-ostream &operator << (ostream &os, AsnList<T> &l)
+std::ostream &operator << (std::ostream &os, AsnList<T> &l)
 {
     os << "SEQUENCE OF { ";
 
@@ -241,7 +243,7 @@
      {
          listElmtTagId = BDecTag (b, bytesDecoded, env);
 
-         if ((listElmtTagId == EOC) && (elmtLen == INDEFINITE_LEN))
+         if ((listElmtTagId == EOC_TAG_ID) && (elmtLen == INDEFINITE_LEN))
              break;
 
 
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-null.C snacc-1.3bbn/c++-lib/src/asn-null.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-null.C	2001-01-27 01:03:01.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-null.C	2005-07-30 19:33:01.169242056 +0000
@@ -48,6 +48,8 @@
 #include "asn-type.h"
 #include "asn-null.h"
 
+using std::endl;
+
 AsnType *AsnNull::Clone() const
 {
   return new AsnNull;
@@ -85,7 +87,7 @@
     BDecContent (b, MAKE_TAG_ID (UNIV, PRIM, NULLTYPE_TAG_CODE), elmtLen, bytesDecoded, env);
 }
 
-void AsnNull::Print (ostream &os) const
+void AsnNull::Print (std::ostream &os) const
 {
     os << "NULL";
 }
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-octs.C snacc-1.3bbn/c++-lib/src/asn-octs.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-octs.C	2001-01-27 01:03:01.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-octs.C	2005-07-30 19:33:30.540776904 +0000
@@ -58,6 +58,8 @@
 #include "asn-octs.h"
 #include "str-stk.h"
 
+using std::endl;
+
 extern StrStk strStkG;
 
 AsnOcts::~AsnOcts()
@@ -166,7 +168,7 @@
 
 
 // Prints the AsnOcts to the given ostream in Value Notation.
-void AsnOcts::Print (ostream &os) const
+void AsnOcts::Print (std::ostream &os) const
 {
     int i;
     os << "'";
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-oid.C snacc-1.3bbn/c++-lib/src/asn-oid.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-oid.C	2001-01-27 01:03:01.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-oid.C	2005-07-30 19:43:47.320214040 +0000
@@ -51,7 +51,7 @@
 
 #include "asn-config.h"
 #if TCL
-#include <strstream.h>
+#include <strstream>
 #endif
 #include "asn-len.h"
 #include "asn-tag.h"
@@ -59,6 +59,8 @@
 #include "asn-oid.h"
 #include "print.h"
 
+using std::endl;
+
 AsnOid::~AsnOid()
 {
   delete oid;
@@ -157,7 +159,7 @@
     *(tmpBuf++) = 0x7f & headArcNum;
 
     // repeat for the rest of the arc numbers
-    for (i = 2; (i < 11) && (arcNumArr[i] > 0); i++)
+    for (int i = 2; (i < 11) && (arcNumArr[i] > 0); i++)
     {
         tmpArcNum = arcNumArr[i];
         for (elmtLen = 1; (tmpArcNum >>= 7) != 0; elmtLen++)
@@ -308,7 +310,7 @@
 
 // Prints an AsnOid in ASN.1 Value Notation.
 // Decodes the oid to get the individual arc numbers
-void AsnOid::Print (ostream &os) const
+void AsnOid::Print (std::ostream &os) const
 {
   unsigned short int firstArcNum;
   unsigned long int arcNum;
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-real.C snacc-1.3bbn/c++-lib/src/asn-real.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-real.C	2001-01-27 01:03:01.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-real.C	2005-07-30 19:44:57.954476000 +0000
@@ -57,12 +57,16 @@
 #include "asn-type.h"
 #include "asn-real.h"
 
+using std::endl;
+
 #ifndef IEEE_REAL_LIB
 /* ieee functions (in case not in math.h)*/
 extern "C" {
 extern int iszero (double);
+#if defined(__GNUC__) && (__GNUC__ < 3)
 extern int isinf (double);
 extern int signbit (double);
+#endif /* __GNUC__ && __GNUC__ < 3 */
 extern int ilogb (double);
 extern double scalbn (double, int);
 }
@@ -841,7 +845,7 @@
     BDecContent (b, MAKE_TAG_ID (UNIV, PRIM, REAL_TAG_CODE), elmtLen, bytesDecoded, env);
 }
 
-void AsnReal::Print (ostream &os) const
+void AsnReal::Print (std::ostream &os) const
 {
   os << value;
 }
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-tag.C snacc-1.3bbn/c++-lib/src/asn-tag.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-tag.C	2001-01-27 01:03:01.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-tag.C	2005-07-30 19:45:24.267135808 +0000
@@ -45,6 +45,8 @@
 #include "asn-len.h"
 #include "asn-tag.h"
 
+using std::endl;
+
 /*
  * Decode a BER Tag from the given buffer.  Error is
  * flagged if the tag is too long or if a read error occurs.
diff -uraN snacc-1.3bbn.orig/c++-lib/src/asn-type.C snacc-1.3bbn/c++-lib/src/asn-type.C
--- snacc-1.3bbn.orig/c++-lib/src/asn-type.C	2001-01-27 01:03:01.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/asn-type.C	2005-07-30 19:30:07.294675008 +0000
@@ -72,6 +72,8 @@
 #include "asn-len.h"
 #include "asn-type.h"
 
+using std::endl;
+
 AsnType::~AsnType()
 {
 }
@@ -97,7 +99,7 @@
 
 #endif
 
-void AsnType::Print (ostream &os) const
+void AsnType::Print (std::ostream &os) const
 {
   os << "ERROR - Attempt to print an improperly formed ANY type (programming error)." << endl;
 }
diff -uraN snacc-1.3bbn.orig/c++-lib/src/meta.C snacc-1.3bbn/c++-lib/src/meta.C
--- snacc-1.3bbn.orig/c++-lib/src/meta.C	2001-01-27 01:03:01.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/meta.C	2005-07-30 19:46:03.588158104 +0000
@@ -27,6 +27,8 @@
 
 #include "asn-incl.h"
 
+using std::endl;
+
 #if META
 
 AsnMemberDesc::AsnMemberDesc (const char *_name, const AsnTypeDesc *_desc):
diff -uraN snacc-1.3bbn.orig/c++-lib/src/print.C snacc-1.3bbn/c++-lib/src/print.C
--- snacc-1.3bbn.orig/c++-lib/src/print.C	2001-01-27 01:03:01.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/print.C	2005-07-30 19:46:33.326637168 +0000
@@ -45,13 +45,13 @@
 unsigned short int stdIndentG = 4;
 
 void
-Indent (ostream &os, unsigned short int i)
+Indent (std::ostream &os, unsigned short int i)
 {
   while (i-->0)
     os <<  ' ';
 }
 
-ostream &operator << (ostream &os, const AsnType &v)
+std::ostream &operator << (std::ostream &os, const AsnType &v)
 {
   v.Print (os);
   return os;
diff -uraN snacc-1.3bbn.orig/c++-lib/src/tcl-if.C snacc-1.3bbn/c++-lib/src/tcl-if.C
--- snacc-1.3bbn.orig/c++-lib/src/tcl-if.C	2001-01-27 01:03:01.000000000 +0000
+++ snacc-1.3bbn/c++-lib/src/tcl-if.C	2005-07-30 19:48:01.296263752 +0000
@@ -28,12 +28,13 @@
 #include <assert.h>
 #include <unistd.h>
 #include <stdlib.h>
-#include <strstream.h>
-#include <fstream.h>
+#include <sstream>
 #include <string.h>
 
 #include "asn-incl.h"
 
+using std::endl;
+
 #if TCL
 
 #ifdef _AIX32
@@ -835,7 +836,7 @@
     }
 
 cout << *var;
-  strstream s;
+  stringstream s;
   s << *var;
   s.put ('\0');
   cout << strlen(s.str()) << endl;
diff -uraN snacc-1.3bbn.orig/compiler/back-ends/c++-gen/gen-code.c snacc-1.3bbn/compiler/back-ends/c++-gen/gen-code.c
--- snacc-1.3bbn.orig/compiler/back-ends/c++-gen/gen-code.c	2001-01-27 01:02:54.000000000 +0000
+++ snacc-1.3bbn/compiler/back-ends/c++-gen/gen-code.c	2005-07-30 19:58:00.407885728 +0000
@@ -453,7 +453,7 @@
         fprintf (src, "    else\n");
         fprintf (src, "        return false;\n");
 /*
-        fprintf (src, "    { cerr << \"longjmp return value is \" << val << endl;\n");
+        fprintf (src, "    { std::cerr << \"longjmp return value is \" << val << std::endl;\n");
         fprintf (src, "        return false; }\n");
 */
         fprintf (src, "}\n\n");
@@ -999,7 +999,7 @@
                                 fprintf (src, ")\n");
                         }
                         fprintf (src, "    {\n");
-            		fprintf (src, "        Asn1Error << \"%s::B%s: ERROR - wrong tag\" << endl;\n", td->cxxTypeDefInfo->className, r->decodeBaseName);
+            		fprintf (src, "        Asn1Error << \"%s::B%s: ERROR - wrong tag\" << std::endl;\n", td->cxxTypeDefInfo->className, r->decodeBaseName);
                         fprintf (src, "        longjmp (env, %d);\n", longJmpValG--);
                         fprintf (src, "    }\n");
 
@@ -1357,7 +1357,7 @@
 
     fprintf (src, "%s::%s (const %s &)\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "{\n");
-    fprintf (src, "  Asn1Error << \"use of incompletely defined %s::%s (const %s &)\" << endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
+    fprintf (src, "  Asn1Error << \"use of incompletely defined %s::%s (const %s &)\" << std::endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "  abort();\n");
     fprintf (src, "}\n\n");
 
@@ -1423,7 +1423,7 @@
     fprintf (src, "\n");
     fprintf (src, "  return *this;\n");
     fprintf (src, "#else // SNACC_DEEP_COPY\n");
-    fprintf (src, "  Asn1Error << \"use of incompletely defined %s &%s::operator = (const %s &)\" << endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
+    fprintf (src, "  Asn1Error << \"use of incompletely defined %s &%s::operator = (const %s &)\" << std::endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "  abort();\n");
     fprintf (src, "  // if your compiler complains here, check the -novolat option\n");
     if (novolatilefuncs)
@@ -1666,7 +1666,7 @@
                         }
 
                         fprintf (src, "      {\n");
-                        fprintf (src, "         Asn1Error << \"Unexpected Tag\" << endl;\n");
+                        fprintf (src, "         Asn1Error << \"Unexpected Tag\" << std::endl;\n");
                         fprintf (src, "         longjmp (env, %d);\n", longJmpValG--);
                         fprintf (src, "      }\n\n");
 
@@ -1780,7 +1780,7 @@
         }
 
         fprintf (src, "    default:\n");
-        fprintf (src, "      Asn1Error << \"ERROR - unexpected tag in CHOICE\" << endl;\n");
+        fprintf (src, "      Asn1Error << \"ERROR - unexpected tag in CHOICE\" << std::endl;\n");
         fprintf (src, "      longjmp (env, %d);\n", longJmpValG--);
         fprintf (src, "      break;\n");
 
@@ -1847,7 +1847,7 @@
             else
                 fprintf (src, "MAKE_TAG_ID (%s, %s, %d))", classStr, formStr, tag->code);
             fprintf (src, "    {\n");
-	    fprintf (src, "        Asn1Error << \"%s::B%s: ERROR - wrong tag\" << endl;\n", td->cxxTypeDefInfo->className, r->decodeBaseName);
+	    fprintf (src, "        Asn1Error << \"%s::B%s: ERROR - wrong tag\" << std::endl;\n", td->cxxTypeDefInfo->className, r->decodeBaseName);
             fprintf (src, "        longjmp (env, %d);\n", longJmpValG--);
             fprintf (src, "    }\n");
             fprintf (src, "    extraLen%d = BDecLen (b, bytesDecoded, env);\n", ++elmtLevel);
@@ -1876,11 +1876,11 @@
     /* ostream printing routine */
     if (printPrintersG)
     {
-        fprintf (hdr, "  void			Print (ostream &os) const;\n", td->cxxTypeDefInfo->className);
+        fprintf (hdr, "  void			Print (std::ostream &os) const;\n", td->cxxTypeDefInfo->className);
 
-        fprintf (src, "void %s::Print (ostream &os) const\n", td->cxxTypeDefInfo->className);
+        fprintf (src, "void %s::Print (std::ostream &os) const\n", td->cxxTypeDefInfo->className);
         fprintf (src, "{\n");
-        /*    fprintf (src, "  os << \"{\" << endl;\n") */
+        /*    fprintf (src, "  os << \"{\" << std::endl;\n") */
         fprintf (src, "  switch (choiceId)\n");
         fprintf (src, "  {\n");
         FOR_EACH_LIST_ELMT (e, choice->basicType->a.choice)
@@ -1909,7 +1909,7 @@
         }
         fprintf (src, "  } // end of switch\n");
 
-        /*    fprintf (src, "  os << \"}\" << endl;\n") */
+        /*    fprintf (src, "  os << \"}\" << std::endl;\n") */
         fprintf (src, "} // %s::Print\n\n", td->cxxTypeDefInfo->className);
     }
     /* end of Print Method code */
@@ -2260,7 +2260,7 @@
 
     fprintf (src, "%s::%s (const %s &)\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "{\n");
-    fprintf (src, "  Asn1Error << \"use of incompletely defined %s::%s (const %s &)\" << endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
+    fprintf (src, "  Asn1Error << \"use of incompletely defined %s::%s (const %s &)\" << std::endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "  abort();\n");
     fprintf (src, "}\n\n");
 
@@ -2310,7 +2310,7 @@
     fprintf (src, "\n");
     fprintf (src, "  return *this;\n");
     fprintf (src, "#else // SNACC_DEEP_COPY\n");
-    fprintf (src, "  Asn1Error << \"use of incompletely defined %s &%s::operator = (const %s &)\" << endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
+    fprintf (src, "  Asn1Error << \"use of incompletely defined %s &%s::operator = (const %s &)\" << std::endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "  abort();\n");
     fprintf (src, "  // if your compiler complains here, check the -novolat option\n");
     if (novolatilefuncs)
@@ -2460,7 +2460,7 @@
             fprintf (src, "    BDecEoc (b, bytesDecoded, env);\n");
             fprintf (src, "  else if (elmtLen0 != 0)\n");
             fprintf (src, "  {\n");
-            fprintf (src, "     Asn1Error << \"Expected an empty sequence\" << endl;\n");
+            fprintf (src, "     Asn1Error << \"Expected an empty sequence\" << std::endl;\n");
             fprintf (src, "     longjmp (env, %d);\n", longJmpValG--);
             fprintf (src, "  }\n");
 
@@ -2638,7 +2638,7 @@
                             }
 
                             fprintf (src, "    {\n");
-                            fprintf (src, "       Asn1Error << \"Unexpected Tag\" << endl;\n");
+                            fprintf (src, "       Asn1Error << \"Unexpected Tag\" << std::endl;\n");
                             fprintf (src, "       longjmp (env, %d);\n", longJmpValG--);
                             fprintf (src, "    }\n\n");
                             fprintf (src, "    elmtLen%d = BDecLen (b, seqBytesDecoded, env);\n", ++elmtLevel);
@@ -2826,7 +2826,7 @@
                     fprintf (src, "  }\n"); /* end of tag check if */
                     fprintf (src, "  else\n");
                     fprintf (src, "  {\n");
-                    fprintf (src, "    Asn1Error << \"ERROR - SEQUENCE is missing non-optional elmt.\" << endl;\n");
+                    fprintf (src, "    Asn1Error << \"ERROR - SEQUENCE is missing non-optional elmt.\" << std::endl;\n");
                     fprintf (src, "    longjmp (env, %d);\n", longJmpValG--);
                     fprintf (src, "  }\n\n");
                 }
@@ -2845,7 +2845,7 @@
             fprintf (src, "  }\n");
             fprintf (src, "  else if (seqBytesDecoded != elmtLen0)\n");
             fprintf (src, "  {\n");
-            fprintf (src, "    Asn1Error << \"ERROR - Length discrepancy on sequence.\" << endl;\n");
+            fprintf (src, "    Asn1Error << \"ERROR - Length discrepancy on sequence.\" << std::endl;\n");
             fprintf (src, "    longjmp (env, %d);\n", longJmpValG--);
             fprintf (src, "  }\n");
             fprintf (src, "  else\n");
@@ -2914,7 +2914,7 @@
             else
                 fprintf (src, "MAKE_TAG_ID (%s, %s, %d))\n", classStr, formStr, tag->code);
             fprintf (src, "  {\n");
-	    fprintf (src, "    Asn1Error << \"%s::B%s: ERROR - wrong tag\" << endl;\n", td->cxxTypeDefInfo->className, r->decodeBaseName);
+	    fprintf (src, "    Asn1Error << \"%s::B%s: ERROR - wrong tag\" << std::endl;\n", td->cxxTypeDefInfo->className, r->decodeBaseName);
             fprintf (src, "    longjmp (env, %d);\n", longJmpValG--);
             fprintf (src, "  }\n");
 
@@ -2939,14 +2939,14 @@
     /* write code for printing */
     if (printPrintersG)
     {
-        fprintf (hdr, "  void		Print (ostream &os) const;\n");
+        fprintf (hdr, "  void		Print (std::ostream &os) const;\n");
 
-        fprintf (src, "void %s::Print (ostream &os) const\n", td->cxxTypeDefInfo->className);
+        fprintf (src, "void %s::Print (std::ostream &os) const\n", td->cxxTypeDefInfo->className);
         fprintf (src, "{\n");
         allOpt = AllElmtsOptional (seq->basicType->a.sequence);
         if (allOpt)
             fprintf (src, "  int nonePrinted = true;\n");
-        fprintf (src, "  os << \"{ -- SEQUENCE --\" << endl;\n");
+        fprintf (src, "  os << \"{ -- SEQUENCE --\" << std::endl;\n");
         fprintf (src, "  indentG += stdIndentG;\n\n");
 
         FOR_EACH_LIST_ELMT (e, seq->basicType->a.sequence)
@@ -2963,12 +2963,12 @@
                 if (e != FIRST_LIST_ELMT (seq->basicType->a.sequence))
                 {
                     fprintf (src, "    if (!nonePrinted)\n");
-                    fprintf (src, "      os << \",\" << endl;\n");
+                    fprintf (src, "      os << \",\" << std::endl;\n");
                 }
                 fprintf (src, "    nonePrinted = false;\n", i);
             }
             else if (inTailOptElmts) /* cannot be first elmt ow allOpt is true */
-                fprintf (src, "    os << \",\"<< endl;\n");
+                fprintf (src, "    os << \",\"<< std::endl;\n");
 
             fprintf (src, "    Indent (os, indentG);\n");
 
@@ -2982,10 +2982,10 @@
 
 #ifdef KHO
             if (e != LAST_LIST_ELMT (seq->basicType->a.sequence)&&(!e->type->cxxTypeRefInfo->isPtr) )
-                fprintf (src, "    os << \",\" << endl;\n");
+                fprintf (src, "    os << \",\" << std::endl;\n");
 #else
             if (e != LAST_LIST_ELMT (seq->basicType->a.sequence) && !inTailOptElmts && !NextIsTailOptional (seq->basicType->a.sequence))
-                fprintf (src, "    os << \",\" << endl;\n");
+                fprintf (src, "    os << \",\" << std::endl;\n");
 #endif
 
 	    fprintf (src, "  }\n");
@@ -3000,9 +3000,9 @@
                   fprintf (src, "    os << \"%s \";\n", e->fieldName);
 		fprintf (src, "    os << \"-- void --\";\n");
     		if (e != LAST_LIST_ELMT (seq->basicType->a.sequence))
-                   fprintf (src, "    os << \",\" << endl;\n");
+                   fprintf (src, "    os << \",\" << std::endl;\n");
                 else
-                   fprintf (src, "    os << endl;\n");
+                   fprintf (src, "    os << std::endl;\n");
 		fprintf (src, "  }\n");
 #else
 		fprintf (src, "    os << \"-- void --\";\n");
@@ -3012,7 +3012,7 @@
 	    fprintf (src, "\n");
 
             if (e == LAST_LIST_ELMT (seq->basicType->a.sequence))
-                fprintf (src, "  os << endl;\n");
+                fprintf (src, "  os << std::endl;\n");
         }
 
         fprintf (src, "  indentG -= stdIndentG;\n");
@@ -3361,7 +3361,7 @@
 
     fprintf (src, "%s::%s (const %s &)\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "{\n");
-    fprintf (src, "  Asn1Error << \"use of incompletely defined %s::%s (const %s &)\" << endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
+    fprintf (src, "  Asn1Error << \"use of incompletely defined %s::%s (const %s &)\" << std::endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "  abort();\n");
     fprintf (src, "}\n\n");
 
@@ -3411,7 +3411,7 @@
     fprintf (src, "\n");
     fprintf (src, "  return *this;\n");
     fprintf (src, "#else // SNACC_DEEP_COPY\n");
-    fprintf (src, "  Asn1Error << \"use of incompletely defined %s &%s::operator = (const %s &)\" << endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
+    fprintf (src, "  Asn1Error << \"use of incompletely defined %s &%s::operator = (const %s &)\" << std::endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "  abort();\n");
     fprintf (src, "  // if your compiler complains here, check the -novolat option\n");
     if (novolatilefuncs)
@@ -3557,7 +3557,7 @@
             fprintf (src, "    BDecEoc (b, bytesDecoded, env);\n");
             fprintf (src, "  else if (elmtLen0 != 0)\n");
             fprintf (src, "  {\n");
-            fprintf (src, "     Asn1Error << \"Expected an empty sequence\" << endl;\n");
+            fprintf (src, "     Asn1Error << \"Expected an empty sequence\" << std::endl;\n");
             fprintf (src, "     longjmp (env, %d);\n", longJmpValG--);
             fprintf (src, "  }\n");
 
@@ -3697,7 +3697,7 @@
                             }
 
                             fprintf (src, "        {\n");
-                            fprintf (src, "           Asn1Error << \"Unexpected Tag\" << endl;\n");
+                            fprintf (src, "           Asn1Error << \"Unexpected Tag\" << std::endl;\n");
                             fprintf (src, "           longjmp (env, %d);\n", longJmpValG--);
                             fprintf (src, "        }\n\n");
 
@@ -3814,14 +3814,14 @@
                 FreeTags (tags);
             } /* for each elmt */
             fprintf (src, "       default:\n");
-            fprintf (src, "         Asn1Error << \"Unexpected Tag on SET elmt.\" << endl;\n");
+            fprintf (src, "         Asn1Error << \"Unexpected Tag on SET elmt.\" << std::endl;\n");
             fprintf (src, "         longjmp (env, %d);\n", longJmpValG--);
             fprintf (src, "    } // end switch\n");
             fprintf (src, "  } // end for loop\n");
             fprintf (src, "  bytesDecoded += setBytesDecoded;\n");
             fprintf (src, "  if (mandatoryElmtsDecoded != %d)\n", mandatoryElmtCount);
             fprintf (src, "  {\n");
-            fprintf (src, "     Asn1Error << \"ERROR - non-optional SET element missing.\" << endl;\n");
+            fprintf (src, "     Asn1Error << \"ERROR - non-optional SET element missing.\" << std::endl;\n");
             fprintf (src, "     longjmp (env, %d);\n", longJmpValG--);
             fprintf (src, "  }\n");
 
@@ -3889,7 +3889,7 @@
             else
                 fprintf (src, "MAKE_TAG_ID (%s, %s, %d))\n", classStr, formStr, tag->code);
             fprintf (src, "  {\n");
-	    fprintf (src, "    Asn1Error << \"%s::B%s: ERROR - wrong tag\" << endl;\n", td->cxxTypeDefInfo->className, r->decodeBaseName);
+	    fprintf (src, "    Asn1Error << \"%s::B%s: ERROR - wrong tag\" << std::endl;\n", td->cxxTypeDefInfo->className, r->decodeBaseName);
             fprintf (src, "    longjmp (env, %d);\n", longJmpValG--);
             fprintf (src, "  }\n");
 
@@ -3914,15 +3914,15 @@
     /* write code for printing */
     if (printPrintersG)
     {
-        fprintf (hdr, "  void			Print (ostream &os) const;\n");
+        fprintf (hdr, "  void			Print (std::ostream &os) const;\n");
 
-        fprintf (src, "void %s::Print (ostream &os) const\n", td->cxxTypeDefInfo->className);
+        fprintf (src, "void %s::Print (std::ostream &os) const\n", td->cxxTypeDefInfo->className);
         fprintf (src, "{\n");
         allOpt = AllElmtsOptional (set->basicType->a.set);
         if (allOpt)
             fprintf (src, "  int nonePrinted = true;\n");
 
-        fprintf (src, "  os << \"{ -- SET --\" << endl;\n");
+        fprintf (src, "  os << \"{ -- SET --\" << std::endl;\n");
         fprintf (src, "  indentG += stdIndentG;\n\n");
 
         FOR_EACH_LIST_ELMT (e, set->basicType->a.set)
@@ -3939,12 +3939,12 @@
                 if (e != FIRST_LIST_ELMT (set->basicType->a.set))
                 {
                     fprintf (src, "    if (!nonePrinted)\n");
-                    fprintf (src, "      os << \",\" << endl;\n");
+                    fprintf (src, "      os << \",\" << std::endl;\n");
                 }
                 fprintf (src, "    nonePrinted = false;\n", i);
             }
             else if (inTailOptElmts) /* cannot be first elmt ow allOpt is true */
-                fprintf (src, "    os << \",\"<< endl;\n");
+                fprintf (src, "    os << \",\"<< std::endl;\n");
 
             fprintf (src, "    Indent (os, indentG);\n");
 
@@ -3957,7 +3957,7 @@
                 fprintf (src, "    os << %s;\n", e->type->cxxTypeRefInfo->fieldName);
 
             if (e != LAST_LIST_ELMT (set->basicType->a.set) && !inTailOptElmts && !NextIsTailOptional (set->basicType->a.set))
-                fprintf (src, "    os << \",\" << endl;\n");
+                fprintf (src, "    os << \",\" << std::endl;\n");
 
 	    fprintf (src, "  }\n");
 
@@ -3974,7 +3974,7 @@
 	    fprintf (src, "\n");
 
             if (e == LAST_LIST_ELMT (set->basicType->a.set))
-                fprintf (src, "  os << endl;\n");
+                fprintf (src, "  os << std::endl;\n");
         }
         fprintf (src, "  indentG -= stdIndentG;\n");
         fprintf (src, "  Indent (os, indentG);\n");
@@ -4294,7 +4294,7 @@
             else
                 fprintf (src, "MAKE_TAG_ID (%s, %s, %d))\n", classStr, formStr, tag->code);
             fprintf (src, "  {\n");
-	    fprintf (src, "    Asn1Error << \"%s::B%s: ERROR - wrong tag\" << endl;\n", td->cxxTypeDefInfo->className, r->decodeBaseName);
+	    fprintf (src, "    Asn1Error << \"%s::B%s: ERROR - wrong tag\" << std::endl;\n", td->cxxTypeDefInfo->className, r->decodeBaseName);
             fprintf (src, "    longjmp (env, %d);\n", longJmpValG--);
             fprintf (src, "  }\n");
 
@@ -4324,7 +4324,7 @@
     fprintf (hdr, "  PDU_MEMBER_MACROS\n");
 
     if (printPrintersG)
-        fprintf (hdr, "  void		Print (ostream &os) const;\n");
+        fprintf (hdr, "  void		Print (std::ostream &os) const;\n");
 
     fprintf (hdr, "};\n\n\n");
 
@@ -4380,7 +4380,7 @@
         }
         fprintf (src, "))\n");
         fprintf (src, "        {\n");
-        fprintf (src, "            Asn1Error << \"Unexpected Tag\" << endl;\n");
+        fprintf (src, "            Asn1Error << \"Unexpected Tag\" << std::endl;\n");
         fprintf (src, "            longjmp (env, %d);\n", longJmpValG--);
         fprintf (src, "        }\n\n");
         fprintf (src, "        elmtLen%d = BDecLen (b, listBytesDecoded, env);\n", ++elmtLevel);
@@ -4406,7 +4406,7 @@
                 fprintf (src, "))\n");
 
             fprintf (src, "        {\n");
-            fprintf (src, "            Asn1Error << \"Unexpected Tag\" << endl;\n");
+            fprintf (src, "            Asn1Error << \"Unexpected Tag\" << std::endl;\n");
             fprintf (src, "            longjmp (env, %d);\n", longJmpValG--);
             fprintf (src, "        }\n\n");
             fprintf (src, "        elmtLen%d = BDecLen (b, listBytesDecoded, env);\n", ++elmtLevel);
@@ -4461,7 +4461,7 @@
 
     fprintf (src, "%s::%s (const %s &)\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "{\n");
-    fprintf (src, "  Asn1Error << \"use of incompletely defined %s::%s (const %s &)\" << endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
+    fprintf (src, "  Asn1Error << \"use of incompletely defined %s::%s (const %s &)\" << std::endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "  abort();\n");
     fprintf (src, "}\n\n");
 
@@ -4494,7 +4494,7 @@
     fprintf (src, "\n");
     fprintf (src, "  return *this;\n");
     fprintf (src, "#else // SNACC_DEEP_COPY\n");
-    fprintf (src, "  Asn1Error << \"use of incompletely defined %s &%s::operator = (const %s &)\" << endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
+    fprintf (src, "  Asn1Error << \"use of incompletely defined %s &%s::operator = (const %s &)\" << std::endl;\n", td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className, td->cxxTypeDefInfo->className);
     fprintf (src, "  abort();\n");
     fprintf (src, "  // if your compiler complains here, check the -novolat option\n");
     if (novolatilefuncs)
@@ -4506,9 +4506,9 @@
 
     if (printPrintersG)
     {
-        fprintf (src, "void %s::Print (ostream &os) const\n", td->cxxTypeDefInfo->className);
+        fprintf (src, "void %s::Print (std::ostream &os) const\n", td->cxxTypeDefInfo->className);
         fprintf (src, "{\n");
-        fprintf (src, "    os << \"{ -- SEQUENCE/SET OF -- \" << endl;\n");
+        fprintf (src, "    os << \"{ -- SEQUENCE/SET OF -- \" << std::endl;\n");
         fprintf (src, "    indentG += stdIndentG;\n");
 
         fprintf (src, "    //SetCurrToFirst();\n");
@@ -4521,7 +4521,7 @@
         fprintf (src, "        //if (Curr() != Last())\n");
         fprintf (src, "        if (run != last)\n");
         fprintf (src, "            os << \",\";\n");
-        fprintf (src, "        os << endl;\n");
+        fprintf (src, "        os << std::endl;\n");
         fprintf (src, "    }\n");
 
         fprintf (src, "    indentG -= stdIndentG;\n");
diff -uraN snacc-1.3bbn.orig/compiler/back-ends/c-gen/gen-code.c snacc-1.3bbn/compiler/back-ends/c-gen/gen-code.c
--- snacc-1.3bbn.orig/compiler/back-ends/c-gen/gen-code.c	2001-01-27 01:02:52.000000000 +0000
+++ snacc-1.3bbn/compiler/back-ends/c-gen/gen-code.c	2005-07-30 19:22:04.488877784 +0000
@@ -33,6 +33,7 @@
  */
 
 #include <stdio.h>
+#include <time.h>
 
 #include "asn-incl.h"
 #include "asn1module.h"
diff -uraN snacc-1.3bbn.orig/compiler/core/parse-asn1.y snacc-1.3bbn/compiler/core/parse-asn1.y
--- snacc-1.3bbn.orig/compiler/core/parse-asn1.y	2001-01-27 01:02:47.000000000 +0000
+++ snacc-1.3bbn/compiler/core/parse-asn1.y	2005-07-30 17:29:02.838828848 +0000
@@ -456,6 +456,7 @@
 /*-----------------------------------------------------------------------*/
 
 LineNo: { $$ = myLineNoG; }
+;
 
 ModuleDefinition:
      ModuleIdentifier
@@ -1462,6 +1463,7 @@
         $$->choiceId = SUBTYPEVALUE_SINGLEVALUE;
         $$->a.singleValue = $1;
     }
+;
 
 ContainedSubtype:
     INCLUDES_SYM Type
